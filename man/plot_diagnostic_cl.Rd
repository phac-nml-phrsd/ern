% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_diagnostic_cl}
\alias{plot_diagnostic_cl}
\title{Diagnostic plot for R estimation from clinical report data}
\usage{
plot_diagnostic_cl(r.estim)
}
\arguments{
\item{r.estim}{List. Output of \code{\link[=estimate_R_cl]{estimate_R_cl()}}.}
}
\value{
A \code{ggplot} object
}
\description{
Diagnostic plot for R estimation from clinical report data
}
\examples{

#' # -- THIS EXAMPLE TAKES ABOUT 30 SECONDS TO RUN --

# Load SARS-CoV-2 reported cases in Ontario
# during the Omicron wave
data('cl.data')
dat = cl.data[cl.data$pt == 'on' & 
                 cl.data$date > as.Date('2021-11-30') & 
                 cl.data$date < as.Date('2022-01-31'),] 

# Estimate Rt
\dontrun{
x = estimate_R_cl(
  cl.data = dat,
  dist.repdelay = ern::def_dist(
    dist = 'gamma',
    mean = 6.99,
    mean_sd = 0.2211,
    sd = 3.663,
    sd_sd = 0.1158,
    max = 21
    ), 
  dist.repfrac = ern::def_dist(
    dist = "unif",
    min = 0.1,
    max = 0.3
    ),
  dist.incub = ern::def_dist(
    dist     = "gamma",
    mean     = 3.49,
    mean_sd  = 0.1477,
    shape    = 8.5,
    shape_sd = 1.8945,
    max      = 8
    ),
  dist.gi = ern::def_dist(
    dist     = "gamma",
    mean     = 6.84,
    mean_sd  = 0.7486,
    shape    = 2.39,
    shape_sd = 0.3573,
    max      = 15
    ),
  popsize = 14e6, # population of Ontario in 2023
  prm.daily = list(
    # Very low number of MCMC iterations
    # for this example to run fast.
    # Increase `burn`, `iter` and `chains` 
    # for better accuracy
    burn = 50, iter = 50, chains = 1, 
    # first.agg.period = NULL,
    prior_R0_shape = 2, prior_R0_rate = 0.6, 
    prior_alpha_shape = 1, prior_alpha_rate = 1),
  silent = TRUE
)

# Diagnostic plot for Rt estimates 
# from clinical data
plot_diagnostic_cl(x)
}

}
\seealso{
\code{\link[=estimate_R_cl]{estimate_R_cl()}}
}
